{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/Seo/index.jsx","webpack:///./src/components/index.jsx","webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/containers/Home/Banner/index.jsx","webpack:///./src/containers/Home/Feature/index.jsx","webpack:///./src/containers/Home/WhyUs/index.jsx","webpack:///./src/containers/Home/Service/index.jsx","webpack:///./src/containers/Home/Quote/index.jsx","webpack:///./src/containers/Home/index.jsx"],"names":["__webpack_require__","r","__webpack_exports__","Containers_Home__WEBPACK_IMPORTED_MODULE_0__","Home","SEO","_ref","description","lang","meta","keywords","title","metaDescription","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","LearnMoreButton","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__","target","_ref2","theme","color","secondary","HeadWrapper","_ref3","breakPoints","md","_ref4","sm","Headline","_ref5","desc","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","reus__WEBPACK_IMPORTED_MODULE_5__","tag","type","css","align","ItemWrapper","_ref6","Item","_ref7","image","titleWeight","gatsby_image__WEBPACK_IMPORTED_MODULE_6___default","fluid","childImageSharp","weight","TitleDesc","_ref8","react__WEBPACK_IMPORTED_MODULE_4___default","Fragment","primary","ImgWrapper","_ref9","LinkArrow","styles","_ref10","text","className","antd_lib_icon__WEBPACK_IMPORTED_MODULE_1___default","createHTML","this","$export","fails","defined","quot","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","Banner","InputStyled","styled_base_browser_esm","input_default","SubmitStyled","button_default","SignUpGoogle","Or","BannerWrapper","BannerLeftWrapper","core_browser_esm","gatsby_browser_entry","query","render","data","index_es","xl","gutter","lg","lib_index_es","id","size","gatsby_image_default","fixed","google","placeholder","alt","heroImage","_3027084076","Feature","FeatureWrapped","components","attendanceLeave","_1618095877","WhyUs","secure","team","time","attendance","cloud","network","_1919206904","Service","ServiceItem","StyledRow","Row","payroll","Service_ref","_3586066318","Quote","TestimonyWrapper","QuoteAssign","width","height","viewBox","d","fill","StyledImage","Img","props","fit","position","SpanQuote","Quote_ref","people","_929440366","HomeWrapper","Seo","Layout","Home_Banner","Home_Feature","Home_WhyUs","Home_Service","Home_Quote"],"mappings":"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","file":"component---src-pages-index-jsx-3f2ec6db24b4db4ab9de.js","sourcesContent":["import Home from 'Containers/Home'\n// import UnderConstruction from 'Containers/UnderConstruction'\n\nexport default Home\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\n\nconst SEO = ({ description, lang, meta, keywords, title }) => {\n  const metaDescription =\n    description\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | Modana`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: '@modana',\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: 'keywords',\n                content: keywords.join(', '),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\nimport { Typography } from 'reus'\nimport Img from 'gatsby-image'\nimport { Icon } from 'antd'\n\nconst LearnMoreButton = styled.button`\n  height: 48px;\n  border-radius: 26px;\n  min-width: 150px;\n  font-weight: bold;\n  border: none;\n  background-color: #fff0e8;\n  text-align: center;\n  text-transform: uppercase;\n  color: ${({theme}) => theme.color.secondary};\n  span {\n    display: block;\n    padding: 0 20px;\n  }\n`\n\nconst HeadWrapper = styled.div`\n  margin-bottom: 80px;\n  max-width: ${({theme}) => theme.breakPoints.md};\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (max-width: ${({theme}) => theme.breakPoints.sm}) {\n    margin-bottom: 20px;\n  }\n`\n\nconst Headline = ({title, desc}) => (\n  <HeadWrapper>\n    <Typography \n      tag=\"h2\" \n      type=\"headline\"\n      css={theme =>  css`color: ${theme.color.secondary};`}\n      align=\"center\">\n      {title}\n    </Typography>\n    {\n      desc && \n        <Typography\n          tag=\"p\" \n          type=\"intro\" \n          align=\"center\">\n          {desc}\n        </Typography>\n    }\n  </HeadWrapper>\n)\n\nconst ItemWrapper = styled.div`\n  padding: 10px;\n  text-align: center;\n  margin-bottom: 20px;\n  @media screen and (max-width: ${({theme}) => theme.breakPoints.sm}) {\n    display: flex;\n    align-items: center;\n  }\n`\n\nconst Item = ({image, title, desc, titleWeight}) => {\n  return (\n    <ItemWrapper>\n      <div css={theme => css`\n        @media screen and (max-width: ${theme.breakPoints.sm}) {\n          & > div {\n            margin-bottom: 0;\n          }\n        }\n      `}>\n        <Img css={css`\n          min-width: 50px;\n          max-width: 80px;\n          margin: 0 auto;\n          margin-bottom: 21px;`} fluid={image.childImageSharp.fluid} />\n      </div>\n      <div css={theme => css`\n        @media screen and (max-width: ${theme.breakPoints.sm}) {\n          padding-left: 20px;\n          p {\n            text-align: left;\n            margin-bottom: 0;\n          }\n        }\n      `}>\n        <Typography\n          type=\"body\"\n          align=\"center\"\n          weight={titleWeight}\n          tag=\"p\">\n          {title}\n        </Typography>\n        {\n          desc &&\n          <Typography\n            type=\"body\"\n            align=\"center\"\n            color=\"#888\"\n            tag=\"p\">\n            {desc}\n          </Typography>\n        }\n      </div>\n    </ItemWrapper>\n  )\n}\n\nconst TitleDesc = ({title, desc}) => (\n  <>\n    <Typography\n      type=\"manifesto\"\n      css={theme => css`color: ${theme.color.primary};`}\n      tag=\"h4\">\n      {title}\n    </Typography>\n    <Typography\n      type=\"body\"\n      color=\"#444\"\n      tag=\"p\">\n      {desc}\n    </Typography>\n  </>\n)\n\nconst ImgWrapper = styled.div`\n  border-radius: 11px;\n  box-shadow: 0px 8px 36px #d8d8d8;\n  overflow: hidden;\n  @media screen and (max-width: ${({theme}) => theme.breakPoints.sm}) {\n    margin-bottom: 40px;\n  }\n`\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n`\nconst LinkArrow = ({text, className}) => (\n  <a\n    className={className}\n    css={theme => css`\n      color: ${theme.color.primary};\n      text-transform: uppercase;\n      font-weight: bold;\n      display: block;\n  `}>\n    {text} \n    <Icon css={theme => css`\n      color: ${theme.color.secondary};\n      padding-left: 10px;\n    `} color=\"\" type=\"arrow-right\" />\n  </a>\n)\n\nexport {\n  LearnMoreButton,\n  Item,\n  Headline,\n  TitleDesc,\n  ImgWrapper,\n  List,\n  LinkArrow\n}","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\nimport { Container, Row, Col, Typography } from 'reus'\nimport { Button, Input } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst Banner  = () => {\n  const InputStyled = styled(Input)`\n    border-radius: 21px;\n    margin-bottom: 20px;\n    border: 1px solid #f3f3f4;\n    padding: 6px 20px;\n    max-width: 60%;\n    @media screen and (max-width: ${({theme}) => theme.breakPoints.md}) {\n      max-width: 100%;\n    }\n  `\n  const SubmitStyled = styled(Button)`\n    border-radius: 21px;\n    background: ${({theme}) => theme.color.secondary};\n    color: #fff;\n    border: 1px solid ${({theme}) => theme.color.secondary};\n    text-transform: uppercase;\n    max-width: 60%;\n    width: 100%;\n    font-size: 12px;\n    font-weight: bold;\n    box-sizing: border-box;\n    @media screen and (max-width: ${({theme}) => theme.breakPoints.md}) {\n      max-width: 100%;\n      text-align: center;\n    }\n  `\n  const SignUpGoogle = styled(Button)`\n    background: #f8f8f8;\n    margin-bottom: 10px;\n    box-sizing: border-box;\n    color: #666;\n    font-size: 12px;\n    border-radius: 21px;\n    text-transform: uppercase;\n    font-weight: bold;\n    max-width: 60%;\n    border: 1px solid #f3f3f4;\n    @media screen and (max-width: ${({theme}) => theme.breakPoints.md}) {\n      max-width: 100%;\n      text-align: center;\n    }\n    width: 100%;\n    background-image: linear-gradient(to bottom, #fbfcff, #ffffff);\n    & > * {\n      vertical-align: middle;\n    }\n  `\n  const Or = styled.div`\n    text-align: center;\n    max-width: 60%;\n    padding-bottom: 10px;\n    @media screen and (max-width: ${({theme}) => theme.breakPoints.md}) {\n      max-width: 100%;\n      text-align: center;\n    }\n  `\n  const BannerWrapper = styled.div`\n    /* .banner-heading {\n      opacity: 0;\n    }\n    .banner-desc {\n      opacity: 0;\n    }\n    .banner-form {\n      opacity: 0;\n    } */\n  `\n  const BannerLeftWrapper = styled.div`\n    padding-bottom: 20px;\n  `\n  \n  return (\n    <StaticQuery\n      query={graphql`\n        query BannerQuery {\n          google: file(relativePath: { eq: \"google-logo.png\" }) {\n            childImageSharp {\n              fixed(width: 20) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          heroImage: file(relativePath: { eq: \"macbook-iphone-modana.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 633) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <Container xl gutter={22}>\n            <Row align=\"center\" css={theme => css`\n              height: 100vh;\n              min-height: 900px;\n              @media screen and (max-width: ${theme.breakPoints.md}) {\n                min-height: 800px;\n              }\n              @media screen and (max-width: ${theme.breakPoints.sm}) {\n                min-height: 900px;\n              }\n            `}>\n              <Col lg={6} md={6} sm={6}>\n                <Col>\n                  {/* <Transition\n                    mountOnEnter\n                    unmountOnExit\n                    in={true}\n                    appear\n                    timeout={50}\n                    onEnter={node => {\n                      TweenLite.set(node.childNodes[0].firstChild, {\n                        opacity: 0,\n                        y: -20\n                      })\n\n                      TweenLite.set(node.childNodes[0].lastChild, {\n                        opacity: 0,\n                        y: -20,\n                      })\n                      TweenLite.set(node.childNodes[1], {\n                        opacity: 0\n                      })\n                    }}\n                    onEntered={node => {\n                      TweenLite.to(node.childNodes[0].firstChild, 1.7, {\n                        opacity: 1,\n                        y: 0,\n                        delay: 0\n                      })\n                      TweenLite.to(node.childNodes[0].lastChild, 1.4, {\n                        opacity: 1,\n                        y: 0,\n                        delay: 1.3\n                      })\n                      TweenLite.to(node.childNodes[1], 1, {\n                        opacity: 1,\n                        delay: 2\n                      })\n                    }}\n                    > */}\n                    <BannerWrapper>\n                      <BannerLeftWrapper>\n                        <Typography \n                          className=\"banner-heading\"\n                          tag=\"h2\" \n                          weight=\"bold\"\n                          css={theme => css`color: ${theme.color.primary};`}\n                          type=\"headline-elevated\">\n                            <FormattedMessage id=\"home-banner-title\" />\n                        </Typography>\n                        <Typography className=\"banner-desc\" tag=\"p\" type=\"intro-elevated\">\n                          <FormattedMessage id=\"home-banner-desc\" />\n                        </Typography>\n                      </BannerLeftWrapper>\n                      <div css={css`margin-top: 30px;`} className=\"banner-form\">\n                        <SignUpGoogle size=\"large\">\n                          <Img css={css`margin-right: 12px;`} fixed={data.google.childImageSharp.fixed} />\n                          <FormattedMessage id=\"home-banner-signup-google\" />\n                        </SignUpGoogle>\n                        <Or>or</Or>\n                        <form>\n                          <label>\n                            <InputStyled size=\"large\" placeholder=\"Full Name\" alt=\"Full Name\"/>\n                          </label>\n                          <label>\n                            <InputStyled size=\"large\" placeholder=\"Work email address\" alt=\"Work email address\"/> \n                          </label>\n                          <label>\n                            <InputStyled size=\"large\" placeholder=\"Company Name\" alt=\"Company Name\"/>\n                          </label>\n                          <SubmitStyled size=\"large\">\n                            <FormattedMessage id=\"home-banner-get-started\" />\n                          </SubmitStyled>\n                        </form>\n                      </div>\n                    </BannerWrapper>\n                  {/* </Transition> */}\n                </Col>\n              </Col>\n              <Col lg={6} md={6} sm={6}>\n                <div>\n                  <Img css={css`transform: scale(1.2);`} fluid={data.heroImage.childImageSharp.fluid}/>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        )\n      }}\n    />\n  )\n}\n\nexport default Banner","import React from 'react'\nimport { Container, Typography } from 'reus'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Img from 'gatsby-image'\nimport { Headline } from 'Components'\nimport { FormattedMessage } from 'react-intl'\n\nconst Feature = () => {\n  const Heading = styled.h2`\n    color: ${({theme}) => theme.color.secondary};\n    font-size: 40px;\n    font-weight: bold;\n    font-style: normal;\n    font-stretch: normal;\n    line-height: 1.2;\n    letter-spacing: normal;\n    text-align: center;\n  `\n  const ImgWrapper = styled.div`\n    border-radius: 11px;\n    box-shadow: 0px 8px 36px #d8d8d8;\n    overflow: hidden;\n  `\n  const Desc = styled.p`\n    font-size: 26px;\n    font-weight: normal;\n    font-style: normal;\n    font-stretch: normal;\n    line-height: 1.54;\n    letter-spacing: normal;\n    text-align: center;\n  `\n  const FeatureWrapped = styled.div`\n    label: feature;\n    padding: 70px 0 30px 0px;\n  `\n  return (\n    <StaticQuery\n      query={graphql`\n        query FeatureQuery {\n          attendanceLeave: file(relativePath: { eq: \"attendance-leave-modana.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 600) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <FeatureWrapped>\n            <Container lg gutter={16}>\n              <Headline\n                title={<FormattedMessage id=\"home-section-1-title\"/>}\n                desc={<FormattedMessage id=\"home-section-1-desc\"/>}\n              />\n              <div>\n                <ImgWrapper>\n                  <Img fluid={data.attendanceLeave.childImageSharp.fluid}/>\n                </ImgWrapper>\n              </div>\n            </Container>\n          </FeatureWrapped>\n        )\n      }}\n    />\n  )\n}\n\nexport default Feature","import React from 'react'\nimport { Container, Row, Col } from 'reus'\nimport styled from '@emotion/styled'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Headline, Item } from 'Components'\nimport { FormattedMessage } from 'react-intl'\n\nconst WhyUs = () => {\n  const FeatureWrapped = styled.div`\n    label: feature;\n    padding: 70px 0 30px 0px;\n  `\n  \n  return (\n    <StaticQuery\n      query={graphql`\n        query HeadingQuery {\n          attendance: file(relativePath: { eq: \"attendance.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 80) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          network: file(relativePath: { eq: \"attendance.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 80) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          team: file(relativePath: { eq: \"team.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 80) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          cloud: file(relativePath: { eq: \"cloud.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 80) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          time: file(relativePath: { eq: \"time.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 80) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          secure: file(relativePath: { eq: \"secure.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 80) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <FeatureWrapped>\n              <Container md gutter={22}>\n                <Headline\n                  title={<FormattedMessage id=\"whyus\"/>}\n                  desc={<FormattedMessage id=\"home-whyus-desc\"/>}\n                />\n              </Container>\n              <Container lg gutter={22}>\n                <Row >\n                  <Col lg={4} md={6} sm={12}>\n                    <Item\n                      title={<FormattedMessage id=\"home-whyus-item-1\"/>}\n                      image={data.secure}\n                    />\n                  </Col>\n                  <Col lg={4} md={6} sm={12}>\n                    <Item\n                      title={<FormattedMessage id=\"home-whyus-item-2\"/>}\n                      image={data.team}\n                    />\n                  </Col>\n                  <Col lg={4} md={6} sm={12}>\n                    <Item\n                      title={<FormattedMessage id=\"home-whyus-item-3\"/>}\n                      image={data.time}\n                    />\n                  </Col>\n                  <Col lg={4} md={6} sm={12}>\n                    <Item\n                      title={<FormattedMessage id=\"home-whyus-item-4\"/>}\n                      image={data.attendance}\n                    />\n                  </Col>\n                  <Col lg={4} md={6} sm={12}>\n                    <Item\n                      title={<FormattedMessage id=\"home-whyus-item-5\"/>}\n                      image={data.cloud}\n                    />\n                  </Col>\n                  <Col lg={4} md={6} sm={12}>\n                    <Item\n                      title={<FormattedMessage id=\"home-whyus-item-6\"/>}\n                      image={data.network}\n                    />\n                  </Col>\n                </Row>\n            </Container>\n          </FeatureWrapped>\n        )\n      }}\n    />\n    \n  )\n}\n\nexport default WhyUs","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Container, Typography, Row, Col } from 'reus'\nimport styled from '@emotion/styled'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Headline, LearnMoreButton, TitleDesc, ImgWrapper } from 'Components'\nimport Img from 'gatsby-image'\nimport { FormattedMessage } from 'react-intl'\n\nconst Service = () => {\n  const FeatureWrapped = styled.div`\n    label: feature;\n    padding: 70px 0 30px 0px;\n  `\n\n  const ServiceItem = styled.div`\n    padding: 70px 0;\n    @media screen and (max-width: ${({theme}) => theme.breakPoints.sm}) {\n      padding: 35px 0;\n    }\n  `\n  const StyledRow = styled(Row)`\n    @media screen and (max-width: ${({theme}) => theme.breakPoints.sm}) {\n      flex-direction: column-reverse;\n    }\n  `\n  return (\n    <StaticQuery\n      query={graphql`\n        query ServiceQuery {\n          attendance: file(relativePath: { eq: \"attendance.png\" }) {\n            childImageSharp {\n              fixed(width: 80) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          attendanceLeaveModana: file(relativePath: { eq: \"attendance-leave-modana.png\" }) {\n            childImageSharp {\n              fixed(width: 80) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          payroll: file(relativePath: { eq: \"payroll-modana.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 600) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <FeatureWrapped>\n              <Container xl gutter={22}>\n                <Headline\n                  title={<FormattedMessage id=\"home-services-title\"/>}\n                  desc={<FormattedMessage id=\"home-services-desc\"/>}\n                />\n                <div>\n                  <ServiceItem>\n                    <StyledRow gutter={30} align=\"center\">\n                      <Col sm={6}>\n                        <TitleDesc\n                          title={<FormattedMessage id=\"home-services-item-1-title\"/>}\n                          desc={<FormattedMessage id=\"home-services-item-1-desc\"/>}\n                        />\n                        <LearnMoreButton>\n                          <FormattedMessage id=\"learn-more\"/>\n                        </LearnMoreButton>\n                      </Col>\n                      <Col sm={6}>\n                        <ImgWrapper>\n                          <Img fluid={data.payroll.childImageSharp.fluid} />\n                        </ImgWrapper>\n                      </Col>\n                    </StyledRow>\n                  </ServiceItem>\n                  <ServiceItem>\n                    <StyledRow gutter={30} align=\"center\" css={css`\n                      flex-direction: row-reverse;\n                    `}>\n                      <Col sm={6}>\n                        <TitleDesc\n                          title={<FormattedMessage id=\"home-services-item-2-title\"/>}\n                          desc={<FormattedMessage id=\"home-services-item-2-desc\"/>}\n                        />\n                        <LearnMoreButton>\n                          <FormattedMessage id=\"learn-more\"/>\n                        </LearnMoreButton>\n                      </Col>\n                      <Col sm={6}>\n                        <ImgWrapper>\n                          <Img fluid={data.payroll.childImageSharp.fluid} />\n                        </ImgWrapper>\n                      </Col>\n                    </StyledRow>\n                  </ServiceItem>\n                  <ServiceItem>\n                    <StyledRow gutter={30} align=\"center\">\n                      <Col sm={6}>\n                        <TitleDesc\n                          title={<FormattedMessage id=\"home-services-item-3-title\"/>}\n                          desc={<FormattedMessage id=\"home-services-item-3-desc\"/>}\n                        />\n                        <LearnMoreButton>\n                          <FormattedMessage id=\"learn-more\"/>\n                        </LearnMoreButton>\n                      </Col>\n                      <Col sm={6}>\n                        <ImgWrapper>\n                          <Img fluid={data.payroll.childImageSharp.fluid} />\n                        </ImgWrapper>\n                      </Col>\n                    </StyledRow>\n                  </ServiceItem>\n                </div>\n              </Container>\n          </FeatureWrapped>\n        )\n      }}\n    />\n    \n  )\n}\n\nexport default Service","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img  from 'gatsby-image'\nimport { Row, Col, Typography, Container } from 'reus'\n\nconst Quote = () => {\n  const TestimonyWrapper = styled.div`\n    padding: 50px 0;\n  `\n  const QuoteAssign = () => <svg width=\"80\" height=\"70\" viewBox=\"0 0 6 5\">\n    <path d=\"M4.80002 0.420008L4.71602 0.264008C4.54802 0.376008 4.36402 0.504008 4.16402 0.648008C3.96402 0.784008 3.78002 0.944008 3.61202 1.12801C3.44402 1.31201 3.30002 1.52401 3.18002 1.76401C3.06802 2.00401 3.01202 2.28001 3.01202 2.59201C3.01202 3.04801 3.12002 3.40001 3.33602 3.64801C3.55202 3.89601 3.81202 4.02001 4.11602 4.02001C4.22002 4.02001 4.32402 4.00401 4.42802 3.97201C4.54002 3.94001 4.64002 3.89201 4.72802 3.82801C4.81602 3.75601 4.88802 3.66801 4.94402 3.56401C5.00002 3.45201 5.02802 3.32001 5.02802 3.16801C5.02802 3.01601 5.00002 2.88801 4.94402 2.78401C4.88802 2.67201 4.82002 2.58401 4.74002 2.52001C4.66002 2.44801 4.57202 2.39601 4.47602 2.36401C4.38002 2.33201 4.28802 2.31601 4.20002 2.31601C4.11202 2.31601 4.02402 2.32401 3.93602 2.34001C3.84802 2.35601 3.76802 2.38801 3.69602 2.43601C3.65602 2.39601 3.61602 2.33601 3.57602 2.25601C3.53602 2.17601 3.51602 2.07201 3.51602 1.94401C3.51602 1.65601 3.63202 1.40001 3.86402 1.17601C4.09602 0.944007 4.40802 0.692008 4.80002 0.420008ZM2.31602 0.420008L2.23202 0.264008C2.06402 0.376008 1.88002 0.504008 1.68002 0.648008C1.48002 0.784008 1.29602 0.944008 1.12802 1.12801C0.960015 1.31201 0.816015 1.52401 0.696015 1.76401C0.584015 2.00401 0.528015 2.28001 0.528015 2.59201C0.528015 3.04801 0.636015 3.40001 0.852015 3.64801C1.06802 3.89601 1.32802 4.02001 1.63202 4.02001C1.73602 4.02001 1.84002 4.00401 1.94402 3.97201C2.05602 3.94001 2.15602 3.89201 2.24401 3.82801C2.33202 3.75601 2.40402 3.66801 2.46002 3.56401C2.51602 3.45201 2.54402 3.32001 2.54402 3.16801C2.54402 3.01601 2.51602 2.88801 2.46002 2.78401C2.40402 2.67201 2.33602 2.58401 2.25602 2.52001C2.17602 2.44801 2.08802 2.39601 1.99202 2.36401C1.89602 2.33201 1.80402 2.31601 1.71602 2.31601C1.62802 2.31601 1.54002 2.32401 1.45202 2.34001C1.36402 2.35601 1.28402 2.38801 1.21202 2.43601C1.17202 2.39601 1.13202 2.33601 1.09202 2.25601C1.05202 2.17601 1.03202 2.07201 1.03202 1.94401C1.03202 1.65601 1.14802 1.40001 1.38002 1.17601C1.61202 0.944007 1.92402 0.692008 2.31602 0.420008Z\" fill=\"#C7C7C7\"/>\n    </svg>\n\n  const StyledImage = styled(Img)`\n    border-radius: 50%;\n    overflow: hidden;\n    background: #eaeaea;\n    & > img {\n      object-fit: ${props => props.fit || 'cover'} !important;\n      object-position: ${props => props.position || '50% 50%'} !important;\n    }\n    @media screen and (max-width: ${({theme}) => theme.breakPoints.sm}) {\n      flex-direction: column-reverse;\n      height: 120px;\n      width: 120px;\n      margin: 0 auto;\n      margin-bottom: 30px;\n    }\n  `\n  const SpanQuote = styled.span`\n    position: absolute;\n    @media screen and (max-width: ${({theme}) => theme.breakPoints.sm}) {\n      display: none;\n    }\n    svg {\n      top: -70px;\n      position: absolute;\n    }\n  `\n  return (\n    <StaticQuery\n      query={graphql`\n        query QuoteQuery {\n          people: file(relativePath: { eq: \"photo.jpeg\" }) {\n            childImageSharp {\n              fluid(maxWidth: 170) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <TestimonyWrapper>\n          <Container xl gutter={22}>\n            <Row align=\"center\" gutter={20} css={theme => css`\n              @media screen and (max-width: ${theme.breakPoints.sm}) {\n                flex-direction: column-reverse;\n              }\n            `}>\n              <Col md={9}>\n                <div css={css`position: relative;`}>\n                  <SpanQuote><QuoteAssign/></SpanQuote>\n                  <div css={theme => css`\n                    padding-left: 50px;\n                    @media screen and (max-width: ${theme.breakPoints.sm}) {\n                      padding-left: 20px;\n                      &:before {\n                        position: absolute;\n                        left: 0;\n                        width: 4px;\n                        content: '';\n                        top: 0;\n                        bottom: 0;\n                        background: #e1742a;\n                      }\n                    }\n                  `}>\n                    <Typography\n                      type=\"quote-reduced\"\n                      color=\"#444\"\n                      tag=\"h4\">\n                      That would have been a nightmare to do manually. But with  Modana, it was easy.\n                    </Typography>\n                    <Typography\n                      type=\"body\"\n                      css={theme => css`\n                        color: ${theme.color.primary};\n                      `}\n                      tag=\"p\">\n                      Peter Spiderman\n                    </Typography>\n                  </div>\n                </div>\n              </Col>\n              <Col md={3}>\n                <div>\n                  <StyledImage fluid={data.people.childImageSharp.fluid}/>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </TestimonyWrapper>\n      )}\n    />\n  )\n}\n\nexport default Quote","import React from 'react'\nimport styled from '@emotion/styled'\nimport SEO from 'Components/Seo'\nimport Layout from 'Containers/Layout'\nimport Banner from './Banner'\nimport Feature from './Feature'\nimport WhyUs from './WhyUs'\nimport Service from './Service'\nimport Quote from './Quote'\n\nconst Home = (props) => {\n  const HomeWrapper = styled.div`\n    background: #fbfcff;\n  `\n  return (\n    <HomeWrapper>\n      <SEO \n        title=\"Home\" \n        description={[\"Empowering people and businesses to do their best at work and life with the help of technology\" ]}\n        keywords={[`businesses`, `productive`, `hrd`]} />\n      <Layout>\n        <Banner/>\n        <Feature/>\n        <WhyUs/>\n        <Service/>\n        <Quote/>\n      </Layout>\n    </HomeWrapper>\n  )\n  \n}\nexport default Home\n"],"sourceRoot":""}