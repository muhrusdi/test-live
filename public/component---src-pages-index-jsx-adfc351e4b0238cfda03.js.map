{"version":3,"sources":["webpack:///./src/components/Image/index.jsx","webpack:///./src/pages/index.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Seo/index.jsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Image","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2011440971","IndexPage","Object","core_browser_esm","Layout","Seo","title","keywords","css","_templateObject","carousel_default","date_picker_default","button_default","style","maxWidth","marginBottom","components_Image","to","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","SEO","_ref","description","lang","meta","detailsQuery","metaDescription","site","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-jsx-adfc351e4b0238cfda03.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","/** @jsx jsx */\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { jsx, css } from '@emotion/core'\nimport Button from 'antd/lib/button'\nimport DatePicker from 'antd/lib/date-picker'\nimport Carousel from 'antd/lib/carousel'\nimport Image from '../components/Image'\nimport SEO from '../components/Seo'\nimport Layout from 'Containers/Layout'\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={['gatsby', 'application', 'react']} />\n    <h1 css={css`color: red;`}>Hi people</h1>\n    <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    <Carousel>\n      <div><h3>1</h3></div>\n      <div><h3>2</h3></div>\n      <div><h3>3</h3></div>\n      <div><h3>4</h3></div>\n    </Carousel>\n    <DatePicker/>\n    <Button>test</Button>\n    <div style={{ maxWidth: '300px', marginBottom: '1.45rem' }}>\n      <Image />\n    </div>\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nexport const detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}