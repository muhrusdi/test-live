{"errors":[{"message":"Cannot read property 'push' of undefined","locations":[{"line":5,"column":5}],"path":["mdx","html"]}],"data":{"mdx":{"html":null,"excerpt":"hc-account-1\" hc-account-2 hc-account-3 hc-account-4 hc-account-5 hc-account-6","timeToRead":1,"fields":{"slug":"help-center/account/"},"frontmatter":{"title":"Account"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `hc-account-1\"`), React.createElement(FormattedMessage, {\n      id: \"hc-account-1-desc\"\n    }), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `hc-account-2`), React.createElement(FormattedMessage, {\n      id: \"hc-account-2-desc\"\n    }), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `hc-account-3`), React.createElement(FormattedMessage, {\n      id: \"hc-account-3-desc\"\n    }), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `hc-account-4`), React.createElement(FormattedMessage, {\n      id: \"hc-account-4-desc\"\n    }), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `hc-account-5`), React.createElement(FormattedMessage, {\n      id: \"hc-account-5-desc\"\n    }), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `hc-account-6`), React.createElement(FormattedMessage, {\n      id: \"hc-account-6-desc\"\n    }));\n  }\n\n}"}}},"pageContext":{"slug":"help-center/account/","dataMenus":[{"node":{"fields":{"slug":"help-center/account/"},"frontmatter":{"title":"Account","lang":"id"},"headings":[{"value":"hc-account-1\""},{"value":"hc-account-2"},{"value":"hc-account-3"},{"value":"hc-account-4"},{"value":"hc-account-5"},{"value":"hc-account-6"}]}},{"node":{"fields":{"slug":"help-center/attendance/"},"frontmatter":{"title":"Attendance","lang":"id"},"headings":[{"value":"Attendance not recorded"},{"value":"I’m too late/ too early to clock on/clock off"},{"value":"How to request overtime?"}]}},{"node":{"fields":{"slug":"help-center/lending/"},"frontmatter":{"title":"Lending","lang":"id"},"headings":[{"value":"How to request a loan?"},{"value":"I cannot request Loan"},{"value":"My Loan request has been rejected"},{"value":"How to do a re-payment?"},{"value":"Repayment not automated"}]}},{"node":{"fields":{"slug":"help-center/modanaku-virtual-account/"},"frontmatter":{"title":"Modanaku-Virtual Account","lang":"id"},"headings":[{"value":"How to top up Modanaku"},{"value":"Balance cannot be used"},{"value":"Balance cannot be transferred"},{"value":"Cannot withdraw through ATM"},{"value":"Balance not shown"},{"value":"Balance shown not updated"},{"value":"Modanaku being used by unknown users"}]}},{"node":{"fields":{"slug":"help-center/payroll/"},"frontmatter":{"title":"Payroll","lang":"id"},"headings":[{"value":"Doesn’t received Salary"},{"value":"Payroll history is not updated"}]}}]}}